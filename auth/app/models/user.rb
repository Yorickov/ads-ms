# frozen_string_literal: true

class User < Sequel::Model
  NAME_FORMAT = /\A\w+\z/.freeze

  plugin :secure_password, include_validations: false
  plugin :association_dependencies

  one_to_many :sessions, class: :UserSession
  add_association_dependencies sessions: :delete

  def validate
    super

    validates_presence :name, message: I18n.t('model.errors.user.name.blank')
    validates_presence :email, message: I18n.t('model.errors.user.email.blank')
    validates_presence :password, message: I18n.t('model.errors.user.password.blank')

    validates_format NAME_FORMAT, :name, message: I18n.t('model.errors.user.name.format')
  end
end

# Table: users
# Columns:
#  id              | bigint                      | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  name            | character varying           | NOT NULL
#  email           | text                        | NOT NULL
#  password_digest | character varying           | NOT NULL
#  created_at      | timestamp without time zone | NOT NULL
#  updated_at      | timestamp without time zone | NOT NULL
# Indexes:
#  users_pkey        | PRIMARY KEY btree (id)
#  users_email_index | UNIQUE btree (email)
# Referenced By:
#  user_sessions | user_sessions_user_id_fkey | (user_id) REFERENCES users(id)
